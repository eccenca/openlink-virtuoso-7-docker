;
;  virtuoso.ini
;
;  Configuration file for the OpenLink Virtuoso VDBMS Server
;
;  To learn more about this product, or any other product in our
;  portfolio, please check out our web site at:
;
;      http://www.openlinksw.com
;
;  or contact us at:
;
;      general.information@openlinksw.com
;
;  If you have any technical questions, please contact our support
;  staff at:
;
;      technical.support@openlinksw.com
;

;
;  Database setup
;
[Database]
DatabaseFile		= /data/virtuoso.db
ErrorLogFile		= /data/virtuoso.log
LockFile			= /data/virtuoso.lck
TransactionFile		= /data/virtuoso.trx
xa_persistent_file	= /data/virtuoso.pxa
ErrorLogLevel      = 7
;Syslog      = 1
;crashdump_start_dp = 0
;crashdump_end_dp = 0

FileExtend      = 200
MaxCheckpointRemap    = 2000
;LogSegments    = 0
;Log1   = <name>
;Log2   = <name>
;...
Striping      = 0


[TempDatabase]
DatabaseFile		= /data/virtuoso-temp.db
TransactionFile		= /data/virtuoso-temp.trx
;FileExtend      = 100
MaxCheckpointRemap       = 2000
;LogSegments    = 0
;Log1   = <name>
;Log2   = <name>
;...
;Striping        = 0


;
;  Server parameters
;
[Parameters]
;SSLServerPort		= 2111
;SSLCertificate		= cert.pem
;SSLPrivateKey		= pk.pem
O_DIRECT      = 0
ServerPort      = 1111
LiteMode      = 0
DisableUnixSocket    = 1
DisableTcpSocket    = 0
;X509ClientVerify    = 0
;X509ClientVerifyDepth    = 0
;X509ClientVerifyCAFile    = ca.pem
ServerThreads      = 20
CheckpointInterval    = 60
;UnremapQuota    = 0
CaseMode      = 2
;UseDaylightSaving  = 1
;NullUnspecifiedParams  = 0
MaxStaticCursorRows    = 5000
;PrefixResultNames   = 1
;DisableMtWrite    = 0
;MinAutoCheckpointSize  = 2048
;AutoCheckpointLogSize  = 0
CheckpointAuditTrail    = 0
;CheckpointSyncMode     = 2
AllowOSCalls      = 0
SchedulerInterval    = 10
;TraceOn     = errors
;TraceLogFileLine  = 0
DirsAllowed      = ., /opt/virtuoso-opensource/share/virtuoso/vad, /data/, /tmp
;DirsDenied         = /usr/local/virtuoso/samples, /usr/local/virtuoso/tests/suite
;BackupDirs    = <dir_here>
;SafeExecutables  = 0
DbaExecutables           = dbpump
;TempDir     = <dir_here>
;TempSesDir    = <dir_here>
;DefaltDataLanguage  = <lang_here>
;ServerThreadSize = 50000
;MainThreadSize   = 140000
;FutureThreadSize = 140000
ThreadCleanupInterval    = 0
ThreadThreshold      = 10
ResourcesCleanupInterval  = 0
;Collation    = <collation-here : ex. spanish>
Charset    = UTF-8
FreeTextBatchSize    = 100000
;CallstackOnException = 1
;PLDebug     = 1
;TestCoverage   = <cov_file>
;AddViewColRefsQualifier = 0
;AllowPasswordEncryption = 1
;DecryptionAccess = <user_list>
;TransactionAfterImageLimit = 50000000
;FDsPerFile   = 1
;MaxOptimizeLayouts = 1000
;SkipStartupCompilation = 1
;TempAllocationPct  = 30
;JavaClasspath    = <cp>
;BackupDir1   = <bd1>
;BackupDir2   = <bd2>
;...
SingleCPU      = 0
;RecursiveFreeTextUsage  = 1
;RecursiveTriggerCalls   = 1
;MaxSortedTopRows  = 10000
;MaxDistinctTempMemCacheRows = 100000
;RunAs      = <os_user_name>
;AutoSqlStats   = 0
;MinSignalHandling   = 1
;SqlWarningMode    = 1
;SqlWarningsToSyslog   = 0
;TempDBSize    = 10
;DbevEnable    = 1
;X509ExtensionOID  = <oid>

VADInstallDir      = /opt/virtuoso-opensource/share/virtuoso/vad/
PrefixResultNames               = 0
RdfFreeTextRulesSize    = 100
IndexTreeMaps      = 256
MaxMemPoolSize                  = 200000000
;;
;; When running with large data sets, one should configure the Virtuoso
;; process to use between 2/3 to 3/5 of free system memory and to stripe
;; storage on all available disks.
;;
;; Uncomment next two lines if there is 2 GB system memory free
;NumberOfBuffers          = 170000
;MaxDirtyBuffers          = 130000
;; Uncomment next two lines if there is 4 GB system memory free
;NumberOfBuffers          = 340000
; MaxDirtyBuffers          = 250000
;; Uncomment next two lines if there is 8 GB system memory free
;NumberOfBuffers          = 680000
;MaxDirtyBuffers          = 500000
;; Uncomment next two lines if there is 16 GB system memory free
;NumberOfBuffers          = 1360000
;MaxDirtyBuffers          = 1000000
;; Uncomment next two lines if there is 32 GB system memory free
;NumberOfBuffers          = 2720000
;MaxDirtyBuffers          = 2000000
;; Uncomment next two lines if there is 48 GB system memory free
;NumberOfBuffers          = 4000000
;MaxDirtyBuffers          = 3000000
;; Uncomment next two lines if there is 64 GB system memory free
;NumberOfBuffers          = 5450000
;MaxDirtyBuffers          = 4000000
;;
;; Note the default settings will take very little memory
;; but will not result in very good performance
;;
NumberOfBuffers          = 10000
MaxDirtyBuffers          = 6000

TransactionAfterImageLimit = 2107483640
;TransactionAfterImageLimit = 9223372036854775807

[HTTPServer]
ServerPort      = 80
;HTTPLogFile    = log.out
ServerRoot      = /opt/virtuoso-opensource/var/lib/virtuoso/vsp
;ServerIdString    = virtuoso
;ClientIdString    = Mozilla/4.0 (compatible; Virtuoso)
;SOAPClientIdString  = Openlink Virtuoso SOAP
DavRoot        = DAV
EnabledDavVSP      = 0
HTTPProxyEnabled    = 0
;EnabledGzipContent     = 0
;HttpSessionSize  = 20971520
TempASPXDir      = 0
DefaultMailServer    = localhost:25
Charset       = UTF-8
;POP3Port     = 1234
;NewsServerPort   = 1235
;FTPServerPort    = 21
;FTPServerTimeout       = 600
;SSLPort    = 4433
;SSLCertificate   = ./virtuoso_cert.pem
;SSLPrivateKey    = ./virtuoso_key.pem
;X509ClientVerify = 0
;X509ClientVerifyDepth  = 0
;X509ClientVerifyCAFile = ca.pem
ServerThreads      = 100
MaxKeepAlives      = 10
KeepAliveTimeout    = 10
MaxCachedProxyConnections  = 10
ProxyConnectionCacheTimeout  = 15
HTTPThreadSize      = 140000
;PersistentHostingModules    = 0
;EnableRequestTrap  = 0
HttpPrintWarningsInOutput  = 0
;DAVChunkedQuota  = 1000000
;DAVQuotaEnabled  = 0

;SpamFilter   = 1
;FTPServerAnonymousHome = /DAV/
;FTPServerMinFreePort = 20000
;FTPServerMaxFreePort = 30000
;FTPServerAnonymousLogin = 1
;FTPServerLogFile = ftplog
;NNTPOrganizationHeader = <org>
;NNTPFromHeader   = <from>

[AutoRepair]
BadParentLinks      = 0

[Client]
SQL_PREFETCH_ROWS    = 100
SQL_PREFETCH_BYTES    = 16000
SQL_QUERY_TIMEOUT    = 0
SQL_TXN_TIMEOUT      = 0
;SQL_NO_CHAR_C_ESCAPE    = 1
;; ACTIVATING THE FOLLOWING PROPERTY LEADS TO UTF8-FAIL! DO NOT TOUCH!
;SQL_UTF8_EXECS      = 0
;SQL_NO_SYSTEM_TABLES    = 0
;SQL_BINARY_TIMESTAMP    = 1
;SQL_ENCRYPTION_ON_PASSWORD  = -1

[VDB]
ArrayOptimization    = 0
NumArrayParameters    = 10
VDBDisconnectTimeout    = 1000
;VDBOracleCatalogFix  = 1
;AttachInAutoCommit = 1
;ReconnectOnFailure = 0
KeepConnectionOnFixedThread = 0
;PrpcBurstTimeoutMsecs  = 100
;SerializeConnect = 1
;DisableStmtCache = 0
;SQLStateMap    = <errors_file>
;SkipDMLPrimaryKey  = 0
;RemotePKNotUnique  = 0
;UseGlobalPool    = 0

;DuplicateColumnsCheck  = 0

[Replication]
ServerName      = docker.local
ServerEnable      = 1
QueueMax      = 50000

;
;  Striping setup
;
;  These parameters have only effect when Striping is set to 1 in the
;  [Database] section, in which case the DatabaseFile parameter is ignored.
;
;  With striping, the database is spawned across multiple segments
;  where each segment can have multiple stripes.
;
;  Format of the lines below:
;    Segment<number> = <size>, <stripe file name> [, <stripe file name> .. ]
;
;  <number> must be ordered from 1 up.
;
;  The <size> is the total size of the segment which is equally divided
;  across all stripes forming  the segment. Its specification can be in
;  gigabytes (g), megabytes (m), kilobytes (k) or in database blocks
;  (b, the default)
;
;  Note that the segment size must be a multiple of the database page size
;  which is currently 8k. Also, the segment size must be divisible by the
;  number of stripe files forming  the segment.
;
;  The example below creates a 200 meg database striped on two segments
;  with two stripes of 50 meg and one of 100 meg.
;
;  You can always add more segments to the configuration, but once
;  added, do not change the setup.
;
[Striping]
;GrouthRatio  = 20
Segment1      = 100M, db-seg1-1.db, db-seg1-2.db
Segment2      = 100M, db-seg2-1.db
;...

;[TempStriping]
;GrouthRatio  = 20
;Segment1      = 100M, db-seg1-1.db, db-seg1-2.db
;Segment2      = 100M, db-seg2-1.db
;...

;[Ucms]
;UcmPath      = <path>
;Ucm1        = <file>
;Ucm2        = <file>
;...

[Zero Config]
ServerName      = virtuoso (docker)
;ServerDSN      = ZDSN
;SSLServerName      =
;SSLServerDSN      =


[Mono]
;MONO_TRACE      = Off
;MONO_PATH      = <path_here>
;MONO_ROOT      = <path_here>
;MONO_CFG_DIR      = <path_here>
;virtclr.dll      =


[URIQA]
;DynamicLocal      = 0
DefaultHost      = localhost:80
;LocalHostNames =
;LocalHostMasks =
;Fingerprint =


[SPARQL]
;ExternalQuerySource    = 1
;ExternalXsltSource     = 1
;DefaultGraph          = http://URIQAREPLACEME/dataspace
;ImmutableGraphs        = http://URIQAREPLACEME/dataspace
ResultSetMaxRows             = 0
MaxQueryCostEstimationTime   = 900  ; in seconds
MaxQueryExecutionTime        = 300  ; in seconds
DeferInferenceRulesInit      = 0  ; controls inference rules loading
;PingService           = http://rpc.pingthesemanticweb.com/
DefaultQuery                = SELECT * WHERE {?s ?p ?o} LIMIT 1000


[Plugins]
;LoadPath      = /opt/virtuoso-opensource/lib/virtuoso/hosting
;PERLINISAFEREPLACEMELoad1=Hosting,hosting_perl.so
;PYTHONINISAFEREPLACEMELoad2=Hosting,hosting_python.so
;RUBYINISAFEREPLACEMELoad4=Hosting,hosting_python.so
;Load1        = plain, wikiv
;Load2        = plain, mediawiki
;Load3        = plain, creolewiki
;Load4      = plain, im
;Load5    = plain, wbxml2
;Load6      = plain, hslookup
;Load7        = attach, libphp5.so
;Load8      = Hosting, hosting_php.so
;Load9      = Hosting,hosting_perl.so
;Load10    = Hosting,hosting_python.so
;Load11    = Hosting,hosting_ruby.so
;Load12        = msdtc,msdtc_sample

[Flags]
; enables triggers for the quad table (note by Hugh Williams 2015/07/24)
enable_rdf_trig = 1
